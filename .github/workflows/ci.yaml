name: Zipline CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-test:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.5]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2.1.1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install TA lib (ubuntu)
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        wget https://s3.amazonaws.com/quantopian-orchestration/packages/ta-lib-0.4.0-src.tar.gz
        tar xvfz ta-lib-0.4.0-src.tar.gz
        cd ta-lib
        ./configure
        make
        sudo make install
        sudo ldconfig
    - name: Install TA lib (macOS)
      if: startsWith(matrix.os, 'macos')
      run: |
        brew install ta-lib
    - name: Install TA lib (windows)
      uses: ilammy/msvc-dev-cmd@v1
      if: startsWith(matrix.os, 'windows')
      run: |
        (New-Object Net.WebClient).DownloadFile('http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-msvc.zip', 'ta-lib-0.4.0-msvc.zip')
        Add-Type -AssemblyName System.IO.Compression.FileSystem;[System.IO.Compression.ZipFile]::ExtractToDirectory('ta-lib-0.4.0-msvc.zip', 'C:\')
        cd C:\ta-lib\c\make\cdr\win32\msvc
        nmake
    - name: Get pip cache dir
      id: pip-cache
      run: |
        echo "::set-output name=dir::$(pip cache dir)"
    - name: pip cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ hashFiles('etc/requirements_locked.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install requirements
      run: |
        python -m pip install -r etc/requirements_build.in -c etc/requirements_locked.txt
        python -m pip install --no-binary=bcolz -e .[all] -r etc/requirements_blaze.in -c etc/requirements_locked.txt
    - name: Run tests
      run: |
        nosetests tests
